<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Survey Form</title>
  <style>
  </style>
</head>

<body>
  <form id="probabilityForm" method="post" action="/save-probabilities">
    <input type="text" hidden name="url" value="<%=url%>">
    <% questions.forEach((q) => { %>
    <div class="question-container">
      <h4><%= q.question %> (<%= q.type %>)</h4>

      <% if (q.type === "Short Answer") { %>
      <ul class="answer-options">
        <li class="option-input">
          <input type="text" name="<%= q.name %>_answers[]" placeholder="Possible answer 1" required>
          <input type="number" data-target-name="<%= q.name %>_chances[]" value="100" min="0" max="100" placeholder="% chance" required>
          <input type="hidden" name="<%= q.name %>_chances[]" value="100" min="0" max="100" required>
          <p>100.00</p>
          <button type="button" class="remove-option" style="display: none;">×</button>
        </li>
      </ul>
      <button type="button" class="add-other-option" data-question="<%= q.name %>">Add More Possible Answers</button>
      <div class="chance-total" data-question="<%= q.name %>">Total: 0%</div>

      <% } else if (q.type === "Paragraph") { %>
      <ul class="answer-options">
        <li class="option-input">
          <textarea name="<%= q.name %>_answers[]" rows="3" placeholder="Possible answer 1" required></textarea>
          <input type="number" data-target-name="<%= q.name %>_chances[]" value="100" min="0" max="100" placeholder="% chance" required>
          <input type="hidden" name="<%= q.name %>_chances[]" value="100" min="0" max="100" required>
          <button type="button" class="remove-option" style="display: none;">×</button>
          <p>100.00</p>
        </li>
      </ul>
      <button type="button" class="add-other-option" data-question="<%= q.name %>">Add More Possible Answers</button>
      <div class="chance-total" data-question="<%= q.name %>">Total: 0%</div>

      <% } else if (q.type === "Multiple Choice") { %>
      <ul class="answer-options">
        <% q.options.forEach((option, index) => { %>
        <li>
          <label><%= option %></label>
          <input type="hidden" name="<%= q.name %>_answers[]" value="<%= option %>">
          <input type="number" data-order="<% index %>" data-target-name="<%= q.name %>_chances[]" value="0" min="0" max="100" placeholder="% chance" required>
          <input type="hidden" name="<%= q.name %>_chances[]" value="0" min="0" max="100" required>
          <p></p>
        </li>
        <% }) %>
      </ul>
      <% if (q.hasOtherOptions) { %>
      <div id="<%= q.name %>-other-container" class="other-options-container">
        <!-- Other options will be added here dynamically -->
      </div>
      <button type="button" class="add-other-option" data-question="<%= q.name %>">
        + Add Other Option
      </button>
      <% } %>
      <div class="chance-total" data-question="<%= q.name %>">Total: 0%</div>

      <% } else if (q.type === "Checkboxes") { %>
      <input type="hidden" name="<%= q.name + '_isMultipleChoice[]' %>" value="true">
      <ul class="answer-options">
        <% q.options.forEach((option, index) => { %>
        <li>
          <label><%= option %></label>
          <input type="hidden" name="<%= q.name %>_answers[]" value="<%= option %>">
          <input type="number" data-order="<% index %>" data-target-name="<%= q.name %>_chances[]" value="100" min="0" max="100" placeholder="% chance" required>
          <input type="hidden" name="<%= q.name %>_chances[]" value="100" min="0" max="100" required>
          <p>100</p>
        </li>
        <% }) %>
      </ul>
      <% if (q.hasOtherOptions) { %>
      <div id="<%= q.name %>-other-container" class="other-options-container">
        <!-- Other options will be added here dynamically -->
      </div>
      <button type="button" class="add-other-option" data-question="<%= q.name %>">+ Add Other Option</button>
      <% } %>
      <div class="chance-info">Note: Each option has its own independent chance to be selected</div>

      <% } else if (q.type === "Dropdown") { %>
      <div>
        <ul class="answer-options">
          <% q.options.forEach((option, index) => { %>
          <li>
            <label><%= option %>:</label>
            <input type="hidden" name="<%= q.name %>_answers[]" value="<%= option %>">
            <input type="number" data-order="<% index %>" data-target-name="<%= q.name %>_chances[]" value="0" min="0" max="100" placeholder="% chance" required>
            <input type="hidden" name="<%= q.name %>_chances[]" value="0" min="0" max="100" required>
            <p>0.00</p>
          </li>
          <% }) %>
        </ul>
      </div>
      <% } else if (q.type === "Linear Scale") { %>
      <ul class="answer-options">
        <% q.options.forEach((option, index) => { %>
        <li>
          <label for="<%= q.name + '_opt_' + index %>"><%= option %></label>
          <input type="hidden" name="<%= q.name + '_answers[]' %>" value="<%= option %>">
          <input type="number" data-order="<% index %>" data-target-name="<%= q.name %>_chances[]" value="0" min="0" max="100" placeholder="% chance" required>
          <input type="hidden" name="<%= q.name %>_chances[]" value="0" min="0" max="100" required>
          <p>0.00</p>
        </li>
        <% }) %>
      </ul>
      <div class="chance-total" data-question="<%= q.name %>">Total: 0%</div>
      <% } %>
    </div>
    <hr>
    <% }) %>
    <input type="number" name="respondCount" value="1">
    <button type="submit">Save Probabilities</button>
  </form>

  <script>
    let allQuestions = document.querySelectorAll('.question-container')
    allQuestions.forEach(el => el.querySelectorAll('input[data-target-name]').forEach(input => {
      input.addEventListener('change', function() {
        let allInputs = this.closest('.question-container').querySelectorAll('input[data-target-name]')
        handleInputChange(this, allInputs);
      });
    }));

    function handleInputChange(input, allInputs) {
      let container = input.closest('li');
      const totalInputs = Array.from(allInputs).length;
      const total = Array.from(allInputs).reduce((sum, input) => sum + parseFloat(input.value) ?? 0, 0);
      allInputs.forEach((input) => {
        let container = input.closest('li')
        let chanceText = container.querySelector("p")
        let chance = (parseFloat(input.value).toFixed(2) / total * 100).toFixed(2)
        container.querySelector(`[name="${input.getAttribute('data-target-name')}"]`).value = chance;
        chanceText.textContent = `${chance}`;
      });
    }
  </script>

  <script>
    // Add other option functionality
    document.querySelectorAll('.add-other-option').forEach(button => {
      button.addEventListener('click', function() {
        const questionName = this.getAttribute('data-question');
        const questionContainer = this.closest('.question-container');
        const container = questionContainer.querySelector(`.answer-options`);
        const optionsCount = container.querySelectorAll('.other-option').length;
        // Create new other option
        const otherOptionId = Date.now(); // Unique ID for this option
        const newOption = document.createElement('li');
        newOption.className = 'other-option';
        newOption.innerHTML = `
        <input type="text" name="${questionName}_answers[]" placeholder="Other answer text" required>
        <input type="number" data-target-name="${questionName}_chances[]" value="0" min="0" max="100" placeholder="% chance" required>
        <input type="hidden" name="${questionName}_chances[]" value="0" min="0" max="100" required>
        <p>0.00</p>
        <button type="button" class="remove-other-option" data-question="${questionName}">×</button>
      `;
        container.appendChild(newOption);
        let allInputs = container.querySelectorAll('input[data-target-name]');
        newOption.querySelector('input[data-target-name]').addEventListener('change', function(e) {
          handleInputChange(this, allInputs);
        });

        // Add event listener to the new remove button
        newOption.querySelector('.remove-other-option').addEventListener('click', function() {
          this.parentElement.remove();
          updateChanceTotals();
        });

        // Update chance totals when new other option is added
        updateChanceTotals();
      });
    });

    // Remove other option functionality
    document.querySelectorAll('.remove-other-option').forEach(button => {
      button.addEventListener('click', function() {
        const questionName = this.getAttribute('data-question');
        const container = document.getElementById(`${questionName}-other-container`);
        const addButton = container.parentElement.querySelector('.add-other-option');

        // Clear inputs before hiding
        container.querySelector('input[type="text"]').value = '';
        container.querySelector('input[type="number"]').value = '';

        container.style.display = 'none';
        addButton.style.display = 'block';

        // Update chance totals when other option is removed
        updateChanceTotals();
      });
    });

    // Initialize remove option buttons
    document.querySelectorAll('.remove-option').forEach(button => {
      button.addEventListener('click', function() {
        this.parentElement.remove();
        updateChanceTotals();
      });
    });

    // Calculate and display total chances for each question
    function updateChanceTotals() {
      document.querySelectorAll('.chance-total').forEach(totalElement => {
        const questionName = totalElement.getAttribute('data-question');
        let total = 0;

        // For radio/linear scale/dropdown questions
        document.querySelectorAll(`input[name="${questionName}_chances[]"]`).forEach(input => {
          total += Number(input.value) || 0;
        });

        totalElement.textContent = `Total: ${total}%`;

        // Highlight if total is not 100%
        if (total !== 100) {
          totalElement.style.color = 'red';
          totalElement.title = 'Total should be 100%';
        } else {
          totalElement.style.color = 'green';
          totalElement.title = '';
        }
      });
    }



    // function redistributeValues() {
    //   const n = allInputs.length;
    //   if (n === 0) return;
    //   const share = (100 / n).toFixed(2);
    //   for (const input of allInputs) {
    //     input.value = share;
    //   }
    // }

    // Add change listeners to all chance inputs
    document.querySelectorAll('input[type="number"][placeholder*="chance"]').forEach(input => {
      input.addEventListener('change', updateChanceTotals);
    });

    // Form validation
    document.getElementById('probabilityForm').addEventListener('submit', function(e) {
      let isValid = true;

      // Check all chance totals are 100% where needed
      document.querySelectorAll('.chance-total').forEach(totalElement => {
        const totalText = totalElement.textContent;
        const total = parseInt(totalText.match(/\d+/)[0]);

        if (total !== 100) {
          isValid = false;
          totalElement.style.border = '1px solid red';
        } else {
          totalElement.style.border = 'none';
        }
      });

      // if (!isValid) {
      //   e.preventDefault();
      //   alert('Please make sure all probability totals equal 100%');
      // }
    });

    // Initial update of chance totals
    updateChanceTotals();
  </script>

  <style>
    .question-container {
      margin-bottom: 20px;
      padding: 15px;
      background-color: #f9f9f9;
      border-radius: 5px;
    }

    .answer-options {
      list-style: none;
      padding-left: 0;
    }

    .answer-options li,
    .option-input {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .chance-total {
      display: none;
      font-weight: bold;
      margin: 10px 0;
      padding: 5px;
    }

    .remove-option {
      background: #ff4444;
      color: white;
      border: none;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .remove-option:hover {
      background: #cc0000;
    }

    .chance-info {
      color: #666;
      font-style: italic;
      font-size: 0.9em;
    }

    .dropdown-chances {
      margin-top: 10px;
    }

    .dropdown-chances ul {
      list-style: none;
      padding-left: 0;
    }

    .dropdown-chances li {
      margin-bottom: 5px;
    }

    .other-option-container {
      margin-top: 10px;
      padding: 10px;
      background-color: #f5f5f5;
      border-radius: 4px;
    }

    .other-option {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .add-other-option {
      background: none;
      border: 1px dashed #666;
      color: #666;
      padding: 5px 10px;
      border-radius: 4px;
      cursor: pointer;
      margin-top: 10px;
    }

    .add-other-option:hover {
      background-color: #f0f0f0;
    }

    .remove-other-option {
      background: #ff4444;
      color: white;
      border: none;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .remove-other-option:hover {
      background: #cc0000;
    }
  </style>
</body>

</html>